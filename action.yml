# Copyright Kani Contributors
# SPDX-License-Identifier: Apache-2.0 OR MIT

name: 'Kani Rust Verifier'
description: 'Run the Kani Rust Verifier on a Rust Crate'
author: 'Kani Contributors'

branding:
  icon: 'cloud'
  color: 'orange'

inputs:
  kani-version:
    description: 'Kani Version number'
    required: false
    default: 'latest'
  command:
    description: 'Command to run.'
    required: false
    default: 'cargo-kani'
  working-directory:
    description: 'Directory to run kani on.'
    required: false
    default: '.'
  args:
    description: 'Arguments to pass to kani.'
    required: false
    default: ''
  enable-propproof:
    description: 'Experimental: Allow Kani to verify proptest harnesses using the PropProof feature'
    required: false
    default: false

runs:
  using: "composite"
  steps:
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install Kani
      shell: bash
      run: |
        # If version is latest, install directly from cargo
        if [ "$1" == "latest" ]; then
            cargo install --locked kani-verifier;
        else
            VERSION=$1
            cargo install --version $VERSION --locked kani-verifier;
        fi
        # Check exit status for error handling
        if [ $? -ne O ]; then
            echo "Error installing Kani. Please check if the provided version is correct"
            exit 1
        fi
        # Setup kani in ci
        cargo-kani setup;

    - name: Install PropProof
      if: ${{ inputs.enable-propproof == 'true' }}
      uses: actions/checkout@v3
      with:
        repository: model-checking/kani
        ref: features/proptest
        path: propproof
        submodules: true

    - name: Add PropProof to config
      if: ${{ inputs.enable-propproof == 'true' }}
      shell: bash
      run: |
        echo "paths = [\"$GITHUB_WORKSPACE/propproof\"]" > $HOME/.cargo/config.toml

    - name: Run Kani
      shell: bash
      run: |
        cd ${{ inputs.working-directory }};
        ${{ inputs.command }} ${{ inputs.args }}
